// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go

// Package mock_pin is a generated GoMock package.
package mock_pin

import (
	domain "github.com/go-park-mail-ru/2020_2_Eternity/pkg/domain"
	gomock "github.com/golang/mock/gomock"
	multipart "mime/multipart"
	reflect "reflect"
)

// MockIUsecase is a mock of IUsecase interface
type MockIUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIUsecaseMockRecorder
}

// MockIUsecaseMockRecorder is the mock recorder for MockIUsecase
type MockIUsecaseMockRecorder struct {
	mock *MockIUsecase
}

// NewMockIUsecase creates a new mock instance
func NewMockIUsecase(ctrl *gomock.Controller) *MockIUsecase {
	mock := &MockIUsecase{ctrl: ctrl}
	mock.recorder = &MockIUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIUsecase) EXPECT() *MockIUsecaseMockRecorder {
	return m.recorder
}

// CreatePin mocks base method
func (m *MockIUsecase) CreatePin(pin *domain.PinReq, file *multipart.FileHeader, userId int) (domain.PinResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePin", pin, file, userId)
	ret0, _ := ret[0].(domain.PinResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePin indicates an expected call of CreatePin
func (mr *MockIUsecaseMockRecorder) CreatePin(pin, file, userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePin", reflect.TypeOf((*MockIUsecase)(nil).CreatePin), pin, file, userId)
}

// GetPin mocks base method
func (m *MockIUsecase) GetPin(id int) (domain.PinResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPin", id)
	ret0, _ := ret[0].(domain.PinResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPin indicates an expected call of GetPin
func (mr *MockIUsecaseMockRecorder) GetPin(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPin", reflect.TypeOf((*MockIUsecase)(nil).GetPin), id)
}

// GetPinList mocks base method
func (m *MockIUsecase) GetPinList(username string) ([]domain.PinResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPinList", username)
	ret0, _ := ret[0].([]domain.PinResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPinList indicates an expected call of GetPinList
func (mr *MockIUsecaseMockRecorder) GetPinList(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPinList", reflect.TypeOf((*MockIUsecase)(nil).GetPinList), username)
}

// GetPinBoardList mocks base method
func (m *MockIUsecase) GetPinBoardList(boardId int) ([]domain.PinResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPinBoardList", boardId)
	ret0, _ := ret[0].([]domain.PinResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPinBoardList indicates an expected call of GetPinBoardList
func (mr *MockIUsecaseMockRecorder) GetPinBoardList(boardId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPinBoardList", reflect.TypeOf((*MockIUsecase)(nil).GetPinBoardList), boardId)
}
